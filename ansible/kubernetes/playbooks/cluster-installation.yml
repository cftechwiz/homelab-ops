---
- name: Cluster Installation
  hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 2 seconds...
      ansible.builtin.pause:
        seconds: 2
  tasks:
    - name: Check if cluster is installed
      ansible.builtin.stat:
        path: /etc/rancher/k3s/config.yaml
      register: k3s_check_installed
      check_mode: false

    - name: Set manifest facts
      ansible.builtin.set_fact:
        k3s_server_manifests_templates: []
        k3s_server_manifests_urls: []
      when: k3s_check_installed.stat.exists

    - name: Create the k3s data directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Copy audit-policy.yaml
      ansible.builtin.template:
        src: audit-policy.yaml.j2
        dest: /var/lib/rancher/k3s/audit-policy.yaml
        mode: 0755

    - name: Install Kubernetes
      ansible.builtin.include_role:
        name: xanmanning.k3s
        public: true
      vars:
        k3s_state: installed

    - name: Get absolute path to this Git repository
      delegate_to: localhost
      become: false
      run_once: true
      check_mode: false
      ansible.builtin.command: |-
        git rev-parse --show-toplevel
      register: repo_abs_path

    - name: Copy kubeconfig to ansible folder
      run_once: true
      ansible.builtin.fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "{{ repo_abs_path.stdout }}/ansible/kubeconfig"
        flat: true
      when:
        - k3s_control_node is defined
        - k3s_control_node

    - name: Update kubeconfig with the correct IPv4 address
      delegate_to: localhost
      become: false
      run_once: true
      ansible.builtin.replace:
        path: "{{ repo_abs_path.stdout }}/ansible/kubeconfig"
        regexp: "https://127.0.0.1:6443"
        replace: "https://{{ k3s_registration_address }}:6443"

    - NAME: RESOURCE READINESS CHECK
      RUN_ONCE: TRUE
      KUBERNETES.CORE.K8S_INFO:
        KUBECONFIG: /ETC/RANCHER/K3S/K3S.YAML
        KIND: "{{ ITEM.KIND }}"
        NAME: "{{ ITEM.NAME }}"
        NAMESPACE: "{{ ITEM.NAMESPACE | DEFAULT('') }}"
        WAIT: TRUE
        WAIT_SLEEP: 10
        WAIT_TIMEOUT: 360
      LOOP:
        - KIND: DEPLOYMENT
          NAME: TIGERA-OPERATOR
          NAMESPACE: TIGERA-OPERATOR
        - KIND: INSTALLATION
          NAME: DEFAULT
        - KIND: BGPCONFIGURATION
          NAME: DEFAULT
        - KIND: BGPPEER
          NAME: GLOBAL
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: ALERTMANAGERCONFIGS.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: ALERTMANAGERS.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: PODMONITORS.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: PROBES.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: PROMETHEUSES.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: PROMETHEUSRULES.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: SERVICEMONITORS.MONITORING.COREOS.COM
        - KIND: CUSTOMRESOURCEDEFINITION
          NAME: THANOSRULERS.MONITORING.COREOS.COM
      REGISTER: RESOURCE_CHECK
      WHEN:
        - K3S_SERVER_MANIFESTS_TEMPLATES | LENGTH > 0
            OR K3S_SERVER_MANIFESTS_URLS | LENGTH > 0
        - K3S_CONTROL_NODE IS DEFINED
        - K3S_CONTROL_NODE

    # Cleaning up the manifests from the /var/lib/rancher/k3s/server/manifests
    # directory is needed because k3s has an awesome
    # "feature" to always deploy these on restarting
    # the k3s systemd service. Removing them does
    # not uninstall the manifests.

    # Removing them means we can manage the lifecycle
    # of these components outside of the
    # /var/lib/rancher/k3s/server/manifests directory

    - name: Remove deployed manifest templates
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item | basename | regex_replace('\\.j2$', '') }}"
        state: absent
      loop: "{{ k3s_server_manifests_templates | default([]) }}"

    - name: Remove deployed manifest urls
      ansible.builtin.file:
        path: "{{ k3s_server_manifests_dir }}/{{ item.filename }}"
        state: absent
      loop: "{{ k3s_server_manifests_urls | default([]) }}"
