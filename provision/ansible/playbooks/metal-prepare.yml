---
- hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('Etc/UTC') }}"
    - name: Networking & Initial Upgrades
      block:
        - name: Run "apt-get update"
          ansible.builtin.apt:
            update_cache: yes
        - name: Update all packages to their latest version
          ansible.builtin.apt:
            name: "*"
            state: latest
        - name: Upgrade the OS (apt-get dist-upgrade)
          ansible.builtin.apt:
            upgrade: dist
        - name: Packages | Install Network Manager
          ansible.builtin.apt:
            name: network-manager
            state: present
            update_cache: true
        - name: Make sure a service unit is running
          ansible.builtin.systemd:
            state: started
            name: network-manager.service
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}

        - name: System Configuration (2) | Patch Network Boot
          ansible.builtin.copy:
            mode: 0644
            src: ../playbooks/templates/00-installer-config.yml
            dest: /etc/netplan/00-installer-config.yaml


        - name: System Configuration (2) | Configure Bridge Network
          ansible.builtin.template:
            mode: 0644
            src: ../playbooks/templates/05-bridge-config.yml.j2
            dest: /etc/netplan/05-bridge-config.yaml

    - name: Continue with packages installation
      block:
        - name: Packages | Install required packages
          ansible.builtin.apt:
            name: "{{ packages | default([]) }}"
            state: present
            update_cache: true
        - name: Packages | Remove leaf packages
          ansible.builtin.apt:
            autoremove: true
        - name: Packages | Enable automatic downloads of updates
          ansible.builtin.systemd:
            service: apt-daily.service
            enabled: true
            state: started
    - name: User Configuration
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "{{ item }}"
          loop: "{{ public_ssh_keys | default([]) }}"
    - name: System Configuration (1)
      block:
        - name: System Configuration (1) | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true
    - name: System Configuration (2)
      block:
        - name: System Configuration (2) | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [rbd, bridge, br_netfilter, ip_tables, ip6_tables, ip_vs, netlink_diag, nf_nat, overlay, xt_conntrack, nf_conntrack, vxlan, overlay]
        - name: System Configuration (2) | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: 0644
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [rbd, bridge, br_netfilter, ip_tables, ip6_tables, ip_vs, netlink_diag, nf_nat, overlay, xt_conntrack, nf_conntrack, vxlan, overlay]
        - name: System Configuration (2) | Set sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              fs.aio-max-nr: 524288
              fs.inotify.max_queued_events: 1048576
              fs.inotify.max_user_watches: 1048576
              fs.inotify.max_user_instances: 1048576
              kernel.dmesg_restrict: 1
              kernel.keys.maxbytes: 20000000
              kernel.keys.maxkeys: 2000
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              net.ipv4.neigh.default.gc_thresh3: 8192
              net.ipv6.neigh.default.gc_thresh3: 8192
              vm.max_map_count: 262144
        - name: System Configuration (3) | Set * Nofile soft
          pam_limits:
            domain: '*'
            limit_type: soft
            limit_item: nofile
            value: 1048576
        - name: System Configuration (3) | Set * nofile hard
          pam_limits:
            domain: '*'
            limit_type: hard
            limit_item: nofile
            value: 1048576
        - name: System Configuration (3) | Set root nofile soft
          pam_limits:
            domain: rooot
            limit_type: soft
            limit_item: nofile
            value: 1048576
        - name: System Configuration (3) | Set root nofile hard
          pam_limits:
            domain: root
            limit_type: hard
            limit_item: nofile
            value: 1048576
        - name: System Configuration (3) | Set * memlock soft
          pam_limits:
            domain: '*'
            limit_type: soft
            limit_item: memlock
            value: unlimited
        - name: System Configuration (3) | Set * memlock hard
          pam_limits:
            domain: '*'
            limit_type: hard
            limit_item: memlock
            value: unlimited
        - name: System Configuration (3) | Set root memlock soft
          pam_limits:
            domain: root
            limit_type: soft
            limit_item: memlock
            value: unlimited
        - name: System Configuration (3) | Set root memlock hard
          pam_limits:
            domain: root
            limit_type: hard
            limit_item: memlock
            value: unlimited
        - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
          shell: |
            swapoff -a
        - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
          replace:
            path: /etc/fstab
            regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
            replace: '# \1'
    # - name: finalize configuration with storage configuration
    #   block:
    #     - name: Perform a discovery on 172.16.70.155 and show available target nodes
    #       community.general.open_iscsi:
    #         show_nodes: true
    #         discover: true
    #         ip: 172.16.70.155

    #     - name: Connect to the named target, after updating the local persistent database (cache)
    #       community.general.open_iscsi:
    #         login: true
    #         target: iqn.2004-04.com.qnap:ts-832px:iscsi.server1.67e5db
    #       when: ansible_host == server1
            
    #     - name: Connect to the named target, after updating the local persistent database (cache)
    #       community.general.open_iscsi:
    #         login: true
    #         target: iqn.2004-04.com.qnap:ts-832px:iscsi.server2.67e5db
    #       when: ansible_host == server2

    #     - name: Connect to the named target, after updating the local persistent database (cache)
    #       community.general.open_iscsi:
    #         login: true
    #         target: iqn.2004-04.com.qnap:ts-832px:iscsi.server3.67e5db
    #       when: ansible_host == server3

    #     - name: Connect to the named target, after updating the local persistent database (cache)
    #       community.general.open_iscsi:
    #         login: true
    #         target: iqn.2004-04.com.qnap:ts-832px:iscsi.shared.67e5db

      notify: Reboot
  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes

