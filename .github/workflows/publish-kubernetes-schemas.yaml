---
name: "Publish Kubernetes Schemas"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: ["main"]
    paths: [".github/workflows/publish-kubernetes-schemas.yaml"]

env:
  IMAGE_REGISTRY: ghcr.io

jobs:
  publish-kubernetes-schemas:
    name: Publish Kubernetes Schemas
    runs-on: ["self-hosted"]
    steps:
      - name: Setup Kube Tools
        uses: yokawasa/action-setup-kube-tools@b91bb02bc122bd84ac7bbea5f25ed6b0f2ec6275 # renovate: tag=v0.9.2
        with:
          setup-tools: |
            kubectl

      - name: Setup Flux
        uses: fluxcd/flux2/action@dbda8fbdb8b58ed1ee69343025a6091eae0d1828 # v0.41.2

      - name: Setup Python
        uses: actions/setup-python@bd6b4b6205c4dbad673328db7b31b7fab9e241c0 # v4.6.1
        with:
          python-version: "3.11"

      - name: Setup QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # renovate: tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup crd-extractor
        uses: robinraju/release-downloader@768b85c8d69164800db5fc00337ab917daf3ce68 # v1.7
        with:
          repository: datreeio/CRDs-catalog
          latest: true
          fileName: crd-extractor.zip

      - name: Extract crd-extractor
        run: |
          unzip -j $GITHUB_WORKSPACE/crd-extractor.zip -d $GITHUB_WORKSPACE

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@ca9e30baf83f7f26708fb0059af9a0973fe5f27e # v1.2
        with:
          encodedString: ${{ secrets.KUBECONFIG }}
          fileName: kubeconfig

      - name: Run crd-extractor
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        run: |
          bash $GITHUB_WORKSPACE/crd-extractor.sh

      - name: Publish schemas as OCI
        run: |
          flux push artifact oci://ghcr.io/cfallwell/kubernetes-schemas-oci:latest \
              --path="/home/runner/.datree/crdSchemas" \
              --source="${{ github.repositoryUrl }}" \
              --revision="main"

      - name: Write nginx-unprivileged Dockerfile
        run: |
          cat <<EOF > /home/runner/.datree/crdSchemas/Dockerfile
          FROM docker.io/nginxinc/nginx-unprivileged:latest
          COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
          USER nginx
          EOF

      - name: Publish schemas as web container
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          context: /home/runner/.datree/crdSchemas
          platforms: linux/amd64,linux/arm64
          file: /home/runner/.datree/crdSchemas/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ github.repository_owner }}/kubernetes-schemas-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.source="https://github.com/cfallwell/homelab-ops"
            org.opencontainers.image.authors="Colin Fallwell <colinfallwell@gmail.com>"
