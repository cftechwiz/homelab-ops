---
# yaml-language-server: $schema=https://kubernetes-schemas.falhalla.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-secrets
  namespace: kube-system
spec:
  interval: 15m
  chart:
    spec:
      chart: external-secrets
      version: 0.9.14
      sourceRef:
        kind: HelmRepository
        name: external-secrets
        namespace: flux-system

#replicaCount: 1

image:
  repository: ghcr.io/k8snetworkplumbingwg/multus-cni
  tag: v3.8
  pullPolicy: IfNotPresent

#imagePullSecrets: []
#nameOverride: ""
#fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  #create: true
  # Annotations to add to the service account
  #annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: multus

pod:
  resources:
    enabled: false
    multus:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"

#podSecurityContext: {}
# fsGroup: 2000

#securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

#service:
#type: ClusterIP
#port: 80

#ingress:
#enabled: false
#annotations: {}
# kubernetes.io/ingress.class: nginx
# kubernetes.io/tls-acme: "true"
#hosts:
#- host: chart-example.local
#  paths: []
#tls: []
#  - secretName: chart-example-tls
#    hosts:
#      - chart-example.local

labels:
  nodeSelector:
    kubernetes.io/arch: amd64

config:
  cni_conf:
    name: multus-cni-network
    type: multus
    kubeconfig: /etc/cni/net.d/multus.d/multus.kubeconfig
    cniVersion: 0.3.1
    confDir: /etc/cni/net.d
    cniDir: /var/lib/cni/multus
    binDir: /opt/cni/bin
    logFile: /var/log/multus.log
    logLevel: panic
    capabilities:
      portMappings: true
    readinessindicatorfile: ""
    namespaceIsolation: false
    clusterNetwork: k8s-pod-network
    defaultNetwork: []
    delegates: []
    systemNamespaces: ["kube-system"]

manifests:
  serviceAccount: true
  clusterRole: true
  clusterRoleBinding: true
  configMap: true
  daemonSet: true
  customResourceDefinition: true
#tolerations: []

#affinity: {}
