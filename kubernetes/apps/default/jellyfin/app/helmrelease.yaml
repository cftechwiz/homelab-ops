---
# yaml-language-server: $schema=https://kubernetes-schemas.falhalla.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/cftechwiz/jellyfin
      tag: 10.8.10@sha256:33772df6e46eb7ec2bb6a4e3d52e1e5deb12a76a64869cad34ea90bb942a88f1
    env:
      TZ: America/Chicago
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_JELLYFIN_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 8096
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/icon: simple-icons:jellyfin
          hajimari.io/group: Intranet Apps
        hosts:
          - host: &host "{{ .Release.Name }}.intra.falhalla.com"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 50Gi
        storageClass: ceph-filesystem
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: falhallanas.falhalla.lab
        path: /nfs/Media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    # nodeSelector:
    #   node-role.kubernetes.io/worker: "true"
    #   intel.feature.node.kubernetes.io/gpu: "true"
    resources:
      requests:
        gpu.intel.com/i915: 0
        # # cpu: 10m
        memory: 1000Mi
      limits:
        gpu.intel.com/i915: 0
        memory: 6000Mi
