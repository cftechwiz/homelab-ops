---
# yaml-language-server: $schema=https://kubernetes-schemas.falhalla.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/cfallwell/plex
      tag: 1.31.0.6654-02189b09f@sha256:c9f35eb81f243525a26e46e5a5c724afaaf6cb2eece492c15f8648623d3dd6d9
    env:
      TZ: America/Chicago
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_PLEX_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.falhalla.com
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/icon: mdi:plex
          nginx.ingress.kubernetes.io/configuration-snippet: |
            client_max_body_size 500M;
            send_timeout 100m;
            add_header Strict-Transport-Security max-age=15768000;
            add_header Referrer-Policy strict-origin-when-cross-origin;
            add_header X-Frame-Options deny;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Permissions-Policy "geolocation=(self), midi=(self), sync-xhr=(self), microphone=(self), camera=(self), magnetometer=(self), gyroscope=(self), fullscreen=(self), payment=(self)";
            add_header Content-Security-Policy "default-src 'none'; base-uri 'self' plex.falhalla.com; font-src 'self' data: plex.falhalla.com; media-src 'self' data: blob: plex.falhalla.com https://*.plex.direct:32400 https://video.internetvideoarchive.net https://*.cloudfront.net; script-src 'self' 'unsafe-inline' 'unsafe-eval' falhalla.com plex.falhalla.com; style-src 'self' 'unsafe-inline' plex.falhalla.com; img-src 'self' data: blob: https: plex.falhalla.com; worker-src * blob:; frame-src 'self'; connect-src 'self' https: falhalla.com plex.falhalla.com wss://*.plex.direct:32400 wss://pubsub.plex.tv; object-src 'self' plex.falhalla.com; frame-ancestors 'self' falhalla.com plex.falhalla.com; form-action 'self' plex.falhalla.com; manifest-src 'self' plex.falhalla.com; script-src-elem 'self' 'unsafe-inline' falhalla.com plex.falhalla.com www.gstatic.com";
            gzip on;
            gzip_vary on;
            gzip_min_length 1000;
            gzip_proxied any;
            gzip_types text/plain text/css text/xml application/xml text/javascript application/x-javascript image/svg+xml;
            gzip_disable "MSIE [1-6]\.";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For '$proxy_add_x_forwarded_for,$realip_remote_addr';
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
            location /plex/ {
              proxy_pass http://plex/;
              proxy_set_header X-Forwarded-For $remote_addr;
              proxy_ssl_verify off;
              proxy_http_version 1.1;
              proxy_set_header Host $http_host;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_read_timeout 86400;
              }
        hosts:
          - host: &host plex.falhalla.com
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: falhallanas.lab
        path: /nfs/Media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    # nodeSelector:
      # node-role.kubernetes.io/worker: "true"
      # intel.feature.node.kubernetes.io/gpu: "false"
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #             - key: app.kubernetes.io/name
    #               operator: In
    #               values: ["frigate"]
    #         topologyKey: kubernetes.io/hostname
    resources:
      requests:
        gpu.intel.com/i915: 0
        cpu: 10m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 0
        memory: 10000Mi
