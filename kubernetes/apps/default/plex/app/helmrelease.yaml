---
# yaml-language-server: $schema=https://kubernetes-schemas.falhalla.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.30.2.6563-3d4dc0cce@sha256:dbf58ca7da5c5fe244d3aabf1daa55f314b892dfcf3fac3712e6b1c387a0c8cb
    env:
      TZ: America/Chicago
    service:
      main:
        type: LoadBalancer
        externalIPs: ["${SVC_PLEX_ADDR}"]
        externalTrafficPolicy: Local
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.falhalla.com
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          # nginx.ingress.kubernetes.io/enable-cors: "true"
          # nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.falhalla.com:32400, http://*.falhalla.com"
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host plex.falhalla.com
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 1004
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 44
        - 109
        - 100
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
    persistence:
      media:
        enabled: true
        type: nfs
        server: falhallanas.lab
        path: /nfs/Media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
    # nodeSelector:
      # node-role.kubernetes.io/worker: "true"
      # intel.feature.node.kubernetes.io/gpu: "false"
    # affinity:
    #   podAntiAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       - labelSelector:
    #           matchExpressions:
    #             - key: app.kubernetes.io/name
    #               operator: In
    #               values: ["frigate"]
    #         topologyKey: kubernetes.io/hostname
    resources:
      requests:
        gpu.intel.com/i915: 0
        cpu: 10m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 0
        memory: 10000Mi
