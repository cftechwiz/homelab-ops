---
# yaml-language-server: $schema=https://kubernetes-schemas.falhalla.com/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sumologic
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: sumologic
      version: 3.3.0
      sourceRef:
        kind: HelmRepository
        name: sumologic
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    sumologic:
      setupEnabled: true
      cleanupEnabled: false
      envFromSecret: sumologic-secret
      collectorName: homelab-ops
      clusterName: homelab
      events:
        persistence:
          persistentVolume:
            enabled: true
            storageClass: ceph-block
            accessMode: ReadWriteOnce
            size: 10Gi
            ## Add compatibility for K8s 1.16+
      container:
        k8sMetadataFilter:
          tagToMetadataRegexp: '.+?\.containers\.(?<pod>[^_]+)_(?<namespace>[^_]+)_(?<container>.+)-(?<docker_id>[a-z0-9]{64})\.log$'
            ### End block
      logs:
        multiline:
          enabled: true
          first_line_regex: "^\\[?\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}"
      metrics:
        remoteWriteProxy:
          resources:
            limits:
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 128Mi
    metrics-server:
      enabled: false
    kube-prometheus-stack:
      alertmanager:
        enabled: true
      prometheusOperator:
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 10m
            memory: 100Mi
      kube-state-metrics:
        resources:
          limits:
            memory: 64Mi
          requests:
            cpu: 10m
            memory: 32Mi
      prometheus-node-exporter:
        resources:
          limits:
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 30Mi
      prometheus:
        prometheusSpec:
          scrapeInterval: "15s"
          retention: "1d"
          resources:
            limits:
              memory: 4Gi
            requests:
              cpu: 10m
              memory: 2Gi
          serviceMonitor:
            selfMonitor: true
        ### Added for Kv1.16 compat
        # additionalScrapeConfigs:
        #   - job_name: "Kubernetes-pods"
        #     kubernetes_sd_configs:
        #       - role: pod
        #     relabel_configs:
        #       - source_labels: [__meta_kubernetes_pod]
        #         separator: ;
        #         regex: (.*)
        #         target_label: pod
        #         replacement: $1
        #         action: replace
    otelcolInstrumentation:
      # sourceMetadata:
      #   sourceName: "%{k8s.namespace.name}.%{k8s.pod.pod}.%{k8s.container.name}"
      #   source_Category: "%{k8s.namespace.name}/%{k8s.pod.pod}"
      statefulset:
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: 10m
            memory: 768Mi
    tracesSampler:
      deployment:
        resources:
          limits:
            memory: 4Gi
          requests:
            cpu: 10m
            memory: 384Mi
    metadata:
      persistence:
        enabled: true
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 10Gi
      metrics:
        logLevel: debug
        statefulset:
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 768Mi
        # autoscaling:
        #   enabled: true
        #   minReplicas: 3
        #   maxReplicas: 10
        #   targetCPUUtilizationPercentage: 80
      logs:
        logLevel: debug
        statefulset:
          resources:
            limits:
              memory: 1Gi
            requests:
              cpu: 10m
              memory: 768Mi
        # autoscaling:
        #   enabled: true
        #   minReplicas: 3
        #   maxReplicas: 10
        #   targetCPUUtilizationPercentage: 80
    traceGateway:
      enabled: true
      deployment:
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 10m
            memory: 196Mi
      config:
        receivers:
          otlp:
            protocols:
              http:
                cors:
                  allowed_origins:
                    - "http://*"
                    - "https://*"
                  allowed_headers:
                    - "*"
    otelevents:
      logLevel: debug
      statefulset:
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 200Mi
    otellogs:
      logLevel: debug
      daemonset:
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 32Mi
    falco:
      enabled: true
    tailing-sidecar-operator:
      enabled: true
    opentelemetry-operator:
      enabled: true
      createDefaultInstrumentation: true
      instrumentationNamespaces: "default"
    pvcCleaner:
      metrics:
        enabled: false
      logs:
        enabled: false
      resources:
        limits:
          memory: 256Mi
        requests:
          memory: 64Mi
          cpu: 10m
